let s;try{s=window.location.origin}catch{s="http://127.0.0.1:5000"}try{const t=new XMLHttpRequest;if(t.open("GET",`${s}/api/ping`),t.send(),t.response().status!==200)throw"verify failed"}catch{s="http://127.0.0.1:5000"}const n=s;async function d(t,e,o,a){return await(await fetch(`${n}/api/candles/${t}/${e}/${o}/${a}`)).json()}async function u(t){return await(await fetch(`${n}/api/peers/${t}`)).json()}async function f(t){return await(await fetch(`${n}/api/recommendation/trends/${t}`)).json()}async function h(t){await fetch(`${n}/api/notes`,{method:"PUT",headers:{"Content-Type":"application/json"},body:JSON.stringify({name:t,content:""})})}async function c(t){t=encodeURI(t);const e=await fetch(`${n}/api/notes/${t}`);if(e.status!==200)throw"note doesn't exists";return await e.json()}async function y(t){try{return await c(t),!0}catch{return!1}}async function w(t,e){t=encodeURI(t),await fetch(`${n}/api/notes/${t}`,{method:"PATCH",headers:{"Content-Type":"application/json"},body:JSON.stringify({content:e})})}const r=["1","60","D","M"],l=[...r.map(t=>({value:t,name:t}))];export{h as a,f as b,d as c,c as g,y as n,u as p,l as r,w as u};
